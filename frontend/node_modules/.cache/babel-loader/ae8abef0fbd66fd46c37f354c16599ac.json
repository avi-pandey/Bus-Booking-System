{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\n\nconst seatsReducer = (state = {}, action) => {\n  let {\n    type\n  } = action;\n\n  switch (type) {\n    case 'LOAD_RESERVED_SEATS':\n      {\n        let {\n          reservedSeats\n        } = action;\n        return { ...state,\n          reservedSeats\n        };\n      }\n\n    case 'SELECT_SEATS':\n      {\n        let {\n          seatNumber\n        } = action;\n        let selectedSeats = state.selectedSeats;\n        if (selectedSeats.includes(seatNumber)) selectedSeats = selectedSeats.filter(n => n !== seatNumber);else selectedSeats = [...selectedSeats, seatNumber];\n        return { ...state,\n          'selectedSeats': selectedSeats\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  seats: seatsReducer\n});\nconst intialState = {\n  seats: {\n    reservedSeats: [],\n    selectedSeats: []\n  }\n};\nconst store = createStore(rootReducer, intialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","map":{"version":3,"sources":["/home/avinash/Html-CSS-Practice/assignment-stage-2-856994/mfrp-cts/FE/bus-ticket-booking/src/store/index.js"],"names":["createStore","combineReducers","seatsReducer","state","action","type","reservedSeats","seatNumber","selectedSeats","includes","filter","n","rootReducer","seats","intialState","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACzC,MAAI;AAAEC,IAAAA;AAAF,MAAWD,MAAf;;AACA,UAAQC,IAAR;AACI,SAAK,qBAAL;AAA4B;AACxB,YAAI;AAAEC,UAAAA;AAAF,YAAoBF,MAAxB;AACA,eAAO,EAAE,GAAGD,KAAL;AAAYG,UAAAA;AAAZ,SAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,YAAI;AAAEC,UAAAA;AAAF,YAAiBH,MAArB;AACA,YAAII,aAAa,GAAGL,KAAK,CAACK,aAA1B;AACA,YAAIA,aAAa,CAACC,QAAd,CAAuBF,UAAvB,CAAJ,EACIC,aAAa,GAAGA,aAAa,CAACE,MAAd,CAAqBC,CAAC,IAAIA,CAAC,KAAKJ,UAAhC,CAAhB,CADJ,KAGIC,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAmBD,UAAnB,CAAhB;AACJ,eAAO,EAAE,GAAGJ,KAAL;AAAY,2BAAiBK;AAA7B,SAAP;AACH;;AACD;AAAS,aAAOL,KAAP;AAdb;AAgBH,CAlBD;;AAoBA,MAAMS,WAAW,GAAGX,eAAe,CAAC;AAChCY,EAAAA,KAAK,EAAEX;AADyB,CAAD,CAAnC;AAIA,MAAMY,WAAW,GAAG;AAChBD,EAAAA,KAAK,EAAE;AACHP,IAAAA,aAAa,EAAE,EADZ;AAEHE,IAAAA,aAAa,EAAE;AAFZ;AADS,CAApB;AAOA,MAAMO,KAAK,GAAGf,WAAW,CAACY,WAAD,EAAcE,WAAd,EAA2BE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAAlE,CAAzB;AAEA,eAAeF,KAAf","sourcesContent":["import { createStore, combineReducers } from 'redux'\n\n\n\nconst seatsReducer = (state = {}, action) => {\n    let { type } = action\n    switch (type) {\n        case 'LOAD_RESERVED_SEATS': {\n            let { reservedSeats } = action\n            return { ...state, reservedSeats }\n        }\n        case 'SELECT_SEATS': {\n            let { seatNumber } = action\n            let selectedSeats = state.selectedSeats\n            if (selectedSeats.includes(seatNumber))\n                selectedSeats = selectedSeats.filter(n => n !== seatNumber)\n            else\n                selectedSeats = [...selectedSeats, seatNumber]\n            return { ...state, 'selectedSeats': selectedSeats }\n        }\n        default: return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    seats: seatsReducer\n})\n\nconst intialState = {\n    seats: {\n        reservedSeats: [],\n        selectedSeats: []\n    }\n}\n\nconst store = createStore(rootReducer, intialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default store"]},"metadata":{},"sourceType":"module"}