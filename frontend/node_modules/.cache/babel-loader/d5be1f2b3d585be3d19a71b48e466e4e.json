{"ast":null,"code":"var _jsxFileName = \"/home/avinash/Html-CSS-Practice/assignment-stage-2-856994/mfrp-cts/FE/bus-ticket-booking/src/component/SeatLayout.js\";\nimport React, { useEffect, useState } from 'react';\nimport * as seatApi from '../api/bus-seat';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst SeatLayout = props => {\n  const dispatch = useDispatch();\n  const [busNumber, setBusNumber] = useState(props.busNumber);\n  const reservedSeats = useSelector(state => state.seats.reservedSeats);\n  const selectedSeats = useSelector(state => state.seats.selectedSeats) || [];\n\n  const handleEvent = (e, seatNumber) => {\n    if (!reservedSeats.includes(seatNumber)) dispatch({\n      type: 'SELECT_SEATS',\n      seatNumber\n    });\n  };\n\n  let seats = [];\n\n  for (let i = 1; i <= 40; i++) {\n    seats.push(i);\n  }\n\n  useEffect(() => {\n    seatApi.getResevedSeats(busNumber).then(response => response.data).then(data => {\n      if (data.result > 0) {\n        let reservedSeats = data.result.reservation.reservedSeats;\n        let fare = data.result.service.fare;\n        dispatch({\n          type: 'FARE',\n          fare\n        });\n        dispatch({\n          type: 'LOAD_RESERVED_SEATS',\n          reservedSeats\n        });\n      }\n    });\n  }, []);\n\n  const changeBgColor = item => {\n    if (reservedSeats.includes(item)) return 'black';\n    if (selectedSeats.includes(item)) return 'white';else return 'grey';\n  };\n\n  const renderSeats = () => {\n    return seats.map(item => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        scope: \"col\",\n        style: {\n          margin: '5px',\n          fontSize: '15px',\n          cursor: 'pointer',\n          backgroundColor: changeBgColor(item)\n        },\n        onClick: e => handleEvent(e, item),\n        className: \"badge\",\n        key: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, item);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    style: {\n      width: '200px',\n      height: '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, renderSeats());\n};\n\nexport default SeatLayout;","map":{"version":3,"sources":["/home/avinash/Html-CSS-Practice/assignment-stage-2-856994/mfrp-cts/FE/bus-ticket-booking/src/component/SeatLayout.js"],"names":["React","useEffect","useState","seatApi","useSelector","useDispatch","SeatLayout","props","dispatch","busNumber","setBusNumber","reservedSeats","state","seats","selectedSeats","handleEvent","e","seatNumber","includes","type","i","push","getResevedSeats","then","response","data","result","reservation","fare","service","changeBgColor","item","renderSeats","map","margin","fontSize","cursor","backgroundColor","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport * as seatApi from '../api/bus-seat'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst SeatLayout = (props) => {\n\n\n    const dispatch = useDispatch()\n    const [busNumber, setBusNumber] = useState(props.busNumber)\n\n    const reservedSeats = useSelector(state => state.seats.reservedSeats)\n    const selectedSeats = useSelector(state => state.seats.selectedSeats) || []\n\n    const handleEvent = (e, seatNumber) => {\n        if (!reservedSeats.includes(seatNumber))\n            dispatch({ type: 'SELECT_SEATS', seatNumber })\n    }\n    let seats = []\n    for (let i = 1; i <= 40; i++) {\n        seats.push(i);\n    }\n\n\n    useEffect(() => {\n        seatApi.getResevedSeats(busNumber)\n            .then(response => response.data)\n            .then(data => {\n                if (data.result > 0) {\n                    let reservedSeats = data.result.reservation.reservedSeats\n                    let fare = data.result.service.fare\n                    dispatch({ type: 'FARE', fare })\n                    dispatch({ type: 'LOAD_RESERVED_SEATS', reservedSeats })\n\n                }\n\n            })\n\n    }, [])\n\n    const changeBgColor = (item) => {\n        if (reservedSeats.includes(item))\n            return 'black'\n        if (selectedSeats.includes(item))\n            return 'white'\n        else\n            return 'grey'\n    }\n\n    const renderSeats = () => {\n        return seats.map(item => {\n            return (\n\n                <span scope=\"col\" style={{\n                    margin: '5px', fontSize: '15px',\n                    cursor: 'pointer',\n                    backgroundColor: changeBgColor(item)\n                }}\n                    onClick={e => handleEvent(e, item)}\n                    className=\"badge\" key={item} >\n                    {item}\n                </span>\n            )\n        })\n    }\n    return (\n        <div className=\"\" style={{ width: '200px', height: '400px' }}>\n            {renderSeats()}\n        </div>\n    );\n}\n\nexport default SeatLayout;\n"]},"metadata":{},"sourceType":"module"}